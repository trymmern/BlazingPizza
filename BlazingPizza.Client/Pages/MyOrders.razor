@page "/MyOrders"
@inject HttpClient HttpClient

<PageTitle>Blazing Pizza - My Orders</PageTitle>

<div class="main">
    @if (_ordersWithStatus == null)
    {
        <text>Loading...</text>
    }
    else if (!_ordersWithStatus.Any())
    {
        <h2>No orders placed</h2>
        <a class="btn btn-success" href="">Order some pizzas</a>
    }
    else
    {
        <div class="list-group orders-list">
            @foreach (var item in _ordersWithStatus)
            {
                <div class="list-group-item">
                    <div class="col">
                        <h5>@item.Order.CreatedTime.ToLongDateString()</h5>
                        Items:
                        <strong>@item.Order.Pizzas.Count</strong>
                        Total price:
                        <strong>Â£@item.Order.GetFormattedTotalPrice()</strong>
                    </div>
                    <div class="col">
                        Status: <strong>@item.StatusText</strong>
                    </div>
                    <div class="col flex-grow-0">
                        <a class="btn btn-success" href="myorders/@item.Order.OrderId">
                            Track &gt;
                        </a>
                    </div>
                </div>
            }
        </div>
    }
</div>
@code {
    IEnumerable<OrderWithStatus> _ordersWithStatus;

    protected override async Task OnParametersSetAsync()
    {
        _ordersWithStatus = await HttpClient.GetFromJsonAsync<List<OrderWithStatus>>("orders");
    }
}