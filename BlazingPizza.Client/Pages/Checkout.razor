@page "/checkout"
@inject OrderState OrderState
@inject OrdersClient OrdersClient
@inject NavigationManager NavigationManager
@attribute [Authorize]

<PageTitle>Blazing Pizza - Checkout</PageTitle>

<div class="main">
    <EditForm Model="OrderState.Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
        <div class="checkout-cols">
                <div class="checkout-order-details">
                    <h4>Review order</h4>
                    <OrderReview Order="OrderState.Order"></OrderReview>
                </div>
                
                <div class="checkout-delivery-address">
                    <h4>Deliver to...</h4>
                    <AddressEditor Address="OrderState.Order.DeliveryAddress" />
                </div>
            </div>
            
        <button class="checkout-button btn btn-warning @(_isSubmitting ? "disabled": "")" type="submit">
            Place order
        </button>
        
        <DataAnnotationsValidator />
    </EditForm>
</div>

@code {
    bool _isSubmitting;
    
    async Task PlaceOrder()
    {
        if (_isSubmitting) return;
        _isSubmitting = true;
        
        var newOrderId = await OrdersClient.PlaceOrder(OrderState.Order);
        OrderState.ResetOrder();
        NavigationManager.NavigateTo($"myorders/{newOrderId}");

        _isSubmitting = false;
    }
}